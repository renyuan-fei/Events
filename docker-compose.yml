version: "3.4"

services:
  webapi:
    image: arandomname/webapi                               # Image name to use
    platform: linux/amd64                                   # Platform setting
    build:                                                  # Build information
      context: .                                            # Build context directory
      dockerfile: src/WebAPI/Dockerfile                     # Path to the Dockerfile
    environment:                                            # Environment variables
      - UseInMemoryDatabase=false                           # Whether to use an in-memory database
      - ConnectionStrings__EventsConnection=Server=db;Port=5432;Database=Events;User Id=postgres;Password=Password123456789;SSL Mode=Prefer;Trust Server Certificate=true
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=https://+:443
      - ASPNETCORE_ENVIRONMENT=Development                   # ASP.NET Core environment
      - IdentityServer__Key__Type=Development                # IdentityServer key type
      - Cloudinary__CloudName=${CLOUDINARY_CLOUD_NAME}
      - Cloudinary__ApiKey=${CLOUDINARY_API_KEY}
      - Cloudinary__ApiSecret=${CLOUDINARY_API_SECRET}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=EDvevf5A7VSRViogp3gUaVeoPmfdVe8K5o2b71WeIRiWVHK2Av
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/https/events.club.pfx
    ports:                                                  # Port mappings
      - "7095:443"
      - "7096:80"
    volumes:
      - ./devcerts/:/root/.aspnet/https:ro
    depends_on:                                             # Service dependencies
      - db
    restart: unless-stopped                                 # Restart policy

  db:
    image: postgres:latest                                  # PostgreSQL image
    platform: linux/amd64
    environment:                                            # PostgreSQL environment variables
      - POSTGRES_PASSWORD=Password123456789
      - POSTGRES_DB=Events
      - POSTGRES_USER=postgres
    volumes:                                                # PostgreSQL data volumes
      - postgres_data:/var/lib/postgresql/data
    ports:                                                  # PostgreSQL port mappings
      - "5432:5432"
    restart: unless-stopped

volumes:
  postgres_data: {}                                         # PostgreSQL volume definition
  data_protection_keys: {}                                  # Data protection keys volume definition
