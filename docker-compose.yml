version: "3.4"

services:
  webapi:
    image: webapi                               # Image name to use
    platform: linux/amd64                       # Platform setting
    build:                                      # Build information
      context: .                                # Build context directory
      dockerfile: src/WebAPI/Dockerfile         # Path to the Dockerfile
    environment:                                # Environment variables
      - UseInMemoryDatabase=false               # Whether to use an in-memory database
      - ConnectionStrings__EventsConnection=Server=db;Database=Events;User Id=sa;Password=Password123456789;MultipleActiveResultSets=true;TrustServerCertificate=true
      - ConnectionStrings__IdentityConnection=Server=db;Database=Identity;User Id=sa;Password=Password123456789;MultipleActiveResultSets=true;TrustServerCertificate=true
      - ASPNETCORE_ENVIRONMENT=Development      # ASP.NET Core environment
      - IdentityServer__Key__Type=Development   # IdentityServer key type for development
      - Serilog__WriteTo__2__Args__serverUrl=http://seq:5341 # Serilog logging configuration
    volumes:                                    # Volume mappings
      - ~/.aspnet/https:/https:ro
      - data_protection_keys:/root/.aspnet/DataProtection-Keys
    ports:                                      # Port mappings
      - "7095:443"
    depends_on:                                 # Services dependencies
      - db
      - seq
    restart: unless-stopped                     # Restart policy

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest # SQL Server image
    platform: linux/amd64
    environment:                                # SQL Server environment variables
      - SA_PASSWORD=Password123456789
      - ACCEPT_EULA=Y
    volumes:                                    # SQL Server data volumes
      - SQL_Server:/var/opt/mssql
    ports:                                      # SQL Server port mappings
      - "1433:1433"
    restart: unless-stopped

  seq:
    image: datalust/seq                         # Seq logging system image
    container_name: seqLog                      # Container name
    environment:                                # Seq environment variables
      - ACCEPT_EULA=Y
      - SEQ_API_CANONICALURI=https://seq.example.com
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=SeqFirstrunAdminPassword
    volumes:                                    # Seq data volumes
      - Seq:/data
    ports:                                      # Seq port mappings
      - "5341:5341"
    restart: unless-stopped

volumes:
  SQL_Server: {}                                # SQL Server volume definition
  Seq: {}                                       # Seq volume definition
  data_protection_keys: {}                      # Data protection keys volume definition
